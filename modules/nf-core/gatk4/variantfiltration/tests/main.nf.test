nextflow_process {

    name "Test Process GATK4_VARIANTFILTRATION"
    script "../main.nf"
    process "GATK4_VARIANTFILTRATION"

    tag "modules"
    tag "modules_nfcore"
    tag "gatk4"
    tag "gatk4/variantfiltration"

    test("test_gatk4_variantfiltration_vcf_input") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/gvcf/test.genome.vcf', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/gvcf/test.genome.vcf.idx', checkIfExists: true)
                ]
                input[1] = [
                    [ id:'genome' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta', checkIfExists: true)
                ]
                input[2] = [
                    [ id:'genome' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta.fai', checkIfExists: true)
                ]
                input[3] = [
                    [ id:'genome' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.dict', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out.versions).match() },
                { assert snapshot(file(process.out.vcf.get(0).get(1)).name).match("gatk_hc_vcf_bam_gz_input") },
                { assert snapshot(file(process.out.tbi.get(0).get(1)).name).match("gatk_hc_vcf_tbi_bam_gz_input") },
            )
        }

    }

    test("test_gatk4_variantfiltration_gz_input") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/gvcf/test.genome.vcf.gz', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/gvcf/test.genome.vcf.gz.tbi', checkIfExists: true)
                ]
                input[1] = [
                    [ id:'genome' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta', checkIfExists: true)
                ]
                input[2] = [
                    [ id:'genome' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta.fai', checkIfExists: true)
                ]
                input[3] = [
                    [ id:'genome' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.dict', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out.versions).match() },
                { assert snapshot(file(process.out.vcf.get(0).get(1)).name).match("gatk_hc_vcf_bam_input") },
                { assert snapshot(file(process.out.tbi.get(0).get(1)).name).match("gatk_hc_vcf_tbi_bam_input") },
            )
        }

    }

}

